{"version":3,"sources":["logo.svg","App.js","controlli.js","reportWebVitals.js","index.js"],"names":["App","props","state","console","log","className","style","textAlign","type","onChange","changeEvent","ChangeEvent","target","value","length","fetch","then","response","json","Promise","resolve","CIDCTZ","CIDCDEN","CIDCSOT","CIDCVAR","CIDCCOL","CIDCMTR","CIDCCAT","CIDCINV","CIDCTIP","codicecompleto","descrizione","x","setState","risultato","placeholder","this","map","CIDCTZO","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAAe,I,YC0EAA,E,kDApEb,WAAYC,GAAO,IAAD,8BAEhB,cAAMA,IACDC,MAAM,KAHK,E,0CAQpB,WAAS,IAAD,OAAuB,OAAtBC,QAAQC,IAAI,SACrB,qBAAKC,UAAU,YAAf,SACA,qBAAKA,UAAU,MAAf,SACA,sBAAKA,UAAU,SAAUC,MAAO,CAACC,UAAU,UAA3C,UACE,kDACD,uBAAOC,KAAK,OAAOC,SAAU,SAAAC,GCnBH,IAAAC,KDmB6BD,EChBxDP,QAAQC,IAAIO,EAAYC,OAAOC,OAE5BF,EAAYC,OAAOC,MAAMC,OAAS,EAC7BC,MAAM,eAAeJ,EAAYC,OAAOC,OAC3CG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GACJ,OAAOA,KAEEC,QAAQC,QAAS,CAAC,CAACC,OAAO,GAAGC,QAAQ,GAAGC,QAAQ,GAAGC,QAAQ,GAAGC,QAAQ,GAAGC,QAAQ,GAAGC,QAAS,GAAGC,QAAQ,GAAGC,QAAQ,GAAGC,eAAe,GAAGC,YAAY,ODQ9Ff,MAAK,SAAAgB,GAAC,OAAE,EAAKC,SAAU,CAACC,UAAUF,QAAS3B,UAAU,eAAe8B,YAAY,UACpJ,gCACA,wBAAO7B,MAAO,CAAC,OAAS,OAAO,MAAQ,QAASD,UAAU,sBAA1D,UAEA,gCACE,+BACC,yCACA,yCACA,yCACA,yCACA,yCACA,yCACA,yCACA,yCACA,yCACA,6CACA,kDAGc,MAAd+B,KAAKlC,MAAkBkC,KAAKlC,MAAMgC,UAAUG,KAAI,SAAAL,GAAM,OAE1D,gCACE,+BACE,mCAAMA,EAAEM,WACR,mCAAMN,EAAEV,WACR,mCAAMU,EAAET,WACR,mCAAMS,EAAER,WACR,mCAAMQ,EAAEP,WACR,mCAAMO,EAAEN,WACR,mCAAMM,EAAEL,WACR,mCAAMK,EAAEJ,WACR,mCAAMI,EAAEH,WACR,mCAAMG,EAAEF,kBACR,mCAAME,EAAED,uBAKF,MArCT,kB,GAfiBQ,IAAMC,WEOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e2146c18.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport {letturaDati} from './controlli';\nimport React from 'react';\n\nclass App extends React.Component{\n  constructor(props){\n\n    super(props);\n    this.state=null;\n   \n    \n\n  }\nrender(){console.log(\"prova\"); return (\n<div className=\"container\">\n<div className=\"row\">  \n<div className=\"search\"  style={{textAlign:\"center\"}}>\n  <h1 >Codicedelvino.it</h1>\n <input type=\"Text\" onChange={changeEvent=>{letturaDati(changeEvent).then(x=>this.setState( {risultato:x})) }}  className=\"form-control\" placeholder=\"Cerca\"  />\n <div>\n <table style={{\"margin\":\"auto\",\"color\":\"grey\"}} className=\"table table-striped\">\n  \n <thead>\n   <tr >\n    <th>CIDCTZO</th>\n    <th>CIDCDEN</th>\n    <th>CIDCSOT</th>\n    <th>CIDCVAR</th>\n    <th>CIDCCOL</th>\n    <th>CIDCMTR</th>\n    <th>CIDCCAT</th>\n    <th>CIDCINV</th>\n    <th>CIDCTIP</th>\n    <th>Codice vino</th>\n    <th>Descrizione</th>\n  </tr>\n   </thead>\n   {this.state != null  ?  this.state.risultato.map(x => {return (\n\n<tbody>\n  <tr>\n    <td> {x.CIDCTZO}</td>\n    <td> {x.CIDCDEN}</td>\n    <td> {x.CIDCSOT}</td>\n    <td> {x.CIDCVAR}</td>\n    <td> {x.CIDCCOL}</td>\n    <td> {x.CIDCMTR}</td>\n    <td> {x.CIDCCAT}</td>\n    <td> {x.CIDCINV}</td>\n    <td> {x.CIDCTIP}</td>\n    <td> {x.codicecompleto}</td>\n    <td> {x.descrizione}</td>\n    \n  </tr>\n  </tbody>\n\n   ) }) : ''} \n   </table> </div>\n \n  \n</div></div>\n\n</div>\n\n)\n}\n\n\n\n\n\n}\n\nexport default App;\n","export const letturaDati = ChangeEvent => {\r\n\r\n\r\nconsole.log(ChangeEvent.target.value);\r\n\r\nif(ChangeEvent.target.value.length > 2){\r\nreturn (fetch('/api?filtro='+ChangeEvent.target.value)\r\n    .then(response => response.json())\r\n    .then(json =>  {\r\n      return json;\r\n    })\r\n)}else {return Promise.resolve( [{CIDCTZ:\"\",CIDCDEN:\"\",CIDCSOT:\"\",CIDCVAR:\"\",CIDCCOL:\"\",CIDCMTR:\"\",CIDCCAT:\t\"\",CIDCINV:\"\",CIDCTIP:\"\",codicecompleto:\"\",descrizione:''}]);\r\n}\r\n  \r\n  }","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}